"Previous Section"_Manual.html - "ChemCell WWW Site"_cws - "ChemCell
Documentation"_cd - "ChemCell Commands"_cc - "Next
Section"_Section_start.html :c

:link(cws,http://www.cs.sandia.gov/~sjplimp/ChemCell.html)
:link(cd,Manual.html)
:link(cc,Section_commands.html#comm)

:line

1. Introduction :h3

1.1 What is ChemCell :link(1_1),h4

ChemCell is a particle-based reaction/diffusion simulator designed to
model signaling, regulatory, or metabolic networks in biological
cells.

In ChemCell a single protein, protein complex, or other biomolecule is
represented as a dimensionless particle.  The geometry of a cell
(membranes, organelles, etc) is represented as simple geometrical
objects (spheres, boxes, etc) or as triangulated surfaces.  Particles
diffuse randomly via Brownian motion, either in 3d or on 2d surfaces.
Biochemical reactions occur in accord with chemical rate equations,
which are inputs to ChemCell.  Monte Carlo rules are used to perform
reactions each timestep.  One option is to treat the system of
particles as well-mixed with no spatial information (no diffusion
takes place) and reactions are performed via the Gillespie spatial
stochastic algorithm (SSA).  Alternatively, spatial information is
tracked, and heuristic rules are used to perform binary reactions
between pairs of nearby particles.

ChemCell runs on single-processor desktop or laptop machines, but can
also be run in parallel.  Multiple runs can be performed on a
collection of processors (for statistical purposes), or (for spatial
simulations) the simulation domain can be partitioned across
processors and a single simulation run in parallel.  For spatial
simulations, ChemCell can model systems with only a few particles up
to many millions.

:link(mpi,http://www-unix.mcs.anl.gov/mpi)

ChemCell is a freely-available open-source code, distributed under the
terms of the "GNU Public License"_gnu, which means you can use or
modify the code however you wish.  See "this section"_#1_2 for a brief
discussion of the open-source philosophy.

:link(gnu,http://www.gnu.org/copyleft/gpl.html)

ChemCell is designed to be easy to modify or extend with new
capabilities, such as new reaction rules or boundary conditions.  See
"this section"_Section_modify.html for more details.

ChemCell is written in C++ and can be downloaded from the "ChemCell
WWW Site"_lws.  No additional software is needed to run ChemCell on a
desktop machine.  ChemCell will run on any parallel machine that
compiles C++ and supports the "MPI"_mpi message-passing library.  This
includes distributed- or shared-memory parallel machines and
Beowulf-style clusters.  To run with spatial parallelism, the "Zoltan
library" must also be installed.

:link(zoltan,http://www.cs.sandia.gov/zoltan.html)

ChemCell was originally developed with funding from the US Department
of Energy's "Genomes-to-Life program"_gtl.  It is distributed by
"Sandia National Labs"_snl.  See "this section"_#1_3 for more
information on ChemCell funding and individuals who have contributed
to ChemCell.

:link(snl,http://www.sandia.gov)

ChemCell does not have the ability to create cellular geometries or
visualize simulation output.  Currently, these tasks are handled by
pre- and post-processing codes.  Our group has written a separate
toolkit called "Pizza.py"_pizza which provides tools for doing setup,
analysis, plotting, and visualization for ChemCell simulations.
Pizza.py is written in "Python"_python and is available for download
from "the Pizza.py WWW site"_pizza.

:link(pizza,http://www.cs.sandia.gov/~sjplimp/pizza.html)
:link(python,http://www.python.org)

These are other simulation codes, similar in spirit to ChemCell, which
model biochemical networks of diffusing particles within a spatial
geometry:

"MCell"_mcell - by Joel Stiles (PSC) and Tom Bartol (Salk)
"MesoRD"_meso - by European group
"Smoldyn"_smoldyn - by Steve Andrews (LBNL) :ul

:link(mcell,http://www.mcell.cnl.salk.edu)
:link(meso,http://mesord.sourceforge.net)
:link(smoldyn,http://genomics.lbl.gov/~sandrews/software.html)

:line

1.2 Open source distribution :link(1_2),h4

ChemCell comes with no warranty of any kind.  As each source file states
in its header, it is a copyrighted code that is distributed free-of-
charge, under the terms of the "GNU Public License"_gnu (GPL).  This
is often referred to as open-source distribution - see
"www.gnu.org"_gnuorg or "www.opensource.org"_opensource for more
details.  The legal text of the GPL is in the LICENSE file that is
included in the ChemCell distribution.

:link(gnuorg,http://www.gnu.org)
:link(opensource,http://www.opensource.org)

Here is a summary of what the GPL means for ChemCell users:

(1) Anyone is free to use, modify, or extend ChemCell in any way they
choose, including for commercial purposes.

(2) If you distribute a modified version of ChemCell, it must remain
open-source, meaning you distribute it under the terms of the GPL.
You should clearly annotate such a code as a derivative version of
ChemCell.

(3) If you release any code that includes ChemCell source code, then it
must also be open-sourced, meaning you distribute it under the terms
of the GPL.

(4) If you give ChemCell files to someone else, the GPL LICENSE file and
source file headers (including the copyright and GPL notices) should
remain part of the code.

In the spirit of an open-source code, these are various ways you can
contribute to making ChemCell better.  You can send email on any of
these items.

Point prospective users to the "ChemCell WWW Site"_cws.  Mention it in
talks or link to it from your WWW site. :ulb,l

If you find an error or omission in this manual or on the "ChemCell WWW
Site"_cws, or have a suggestion for something to clarify or include,
send an email. :l

If you find a bug, "this section"_Section_errors.html#7_2 describes
how to report it. :l

If you publish a paper using ChemCell results, send the citation (and
any cool pictures or movies if you like) to add to the Publications,
Pictures, and Movies pages of the "ChemCell WWW Site"_cws, with links
and attributions back to you. :l

Create a new Makefile.machine that can be added to the src/MAKE
directory. :l

ChemCell is designed to be easy to extend with new code for features
like boundary conditions or diagnostic computations.  "This
section"_Section_modify.html gives details.  If you add a feature of
general interest, it can be added to the ChemCell distribution. :l

Cash.  Small denominations, unmarked bills preferred.  Paper sack OK.
Leave on desk.  "VISA"_email also accepted.  Chocolate chip cookies
encouraged. :ule,l

:line

1.3 Acknowledgements and citations :h4,link(1_3)

ChemCell development has been funded by the "US Department of
Energy"_doe (DOE), through its "Genomes-to-Life program"_gtl via the
"OASCR"_oascr and "OBER"_ober offices, and also by DOE's LDRD program.

The original version of ChemCell was funded by the US Department of
Energy's Genomics:GTL program ("www.doegenomestolife.org"_gtl) under
the "project"_ourgtl, "Carbon Sequestration in Synechococcus Sp.: From
Molecular Machines to Hierarchical Modeling".

:link(doe,http://www.doe.gov)
:link(gtl,http://www.doegenomestolife.org)
:link(ourgtl,http://www.genomes2life.org)
:link(oascr,http://www.sc.doe.gov/ascr/home.html)
:link(ober,http://www.er.doe.gov/production/ober/ober_top.html)

If you use ChemCell results in your published work, please provide a
link to the ChemCell WWW page and cite this technical report:

SAND report

The report describes the original version of ChemCell.  Papers that
describe the serial and parallel algorithms used in the current
version are still being written.  Citations for them will be put on
the WWW page when available.

If you send information about your publication, we'll be pleased to
add it to the Publications page of the "ChemCell WWW Site"_cws.  Ditto
for a picture or movie for the Pictures or Movies pages.

The primary authors of ChemCell are "Steve Plimpton"_sjp and Alex
Slepoy of Sandia National Labs who can be contacted via email
at sjplimp@sandia.gov or aslepoy@sandia.gov.

:link(sjp,http://www.cs.sandia.gov/~sjplimp)

We also thank Dan Gillespie for constructive feedback on ChemCell
algorithms and Steve Andrews (LBNL) for helping us understand and
implement portions of his Smoldyn algorithms into the current version
of ChemCell.  Thank TMSI collaborators.
